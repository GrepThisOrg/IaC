---
- name: Cleanup previous files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "{{ workdir }}"
    - "{{ iso_custom }}"
  delegate_to: localhost

- name: Create working directory
  file:
    path: "{{ workdir }}"
    state: directory
  delegate_to: localhost

- name: Extract original ISO
  command: "7z x {{ iso_orig }} -o{{ workdir }}"
  args:
    creates: "{{ workdir }}/[BOOT]"
  delegate_to: localhost

- name: Copy preseed file
  template:
    src: templates/preseed.cfg.j2
    dest: "{{ workdir }}/preseed.cfg"
  delegate_to: localhost

- name: Replace isolinux/txt.cfg for autoinstall
  copy:
    src: templates/txt.cfg
    dest: "{{ workdir }}/isolinux/txt.cfg"
  delegate_to: localhost

- name: Replace grub.cfg for autoinstall
  copy:
    src: templates/grub.cfg
    dest: "{{ workdir }}/boot/grub/grub.cfg"
  delegate_to: localhost

- name: Ensure isolinux directory exists
  file:
    path: "{{ workdir }}/isolinux"
    state: directory
  delegate_to: localhost

- name: Copy isolinux.bin
  copy:
    src: /usr/lib/ISOLINUX/isolinux.bin
    dest: "{{ workdir }}/isolinux/isolinux.bin"
    remote_src: yes
  delegate_to: localhost

- name: Copy ldlinux.c32
  copy:
    src: /usr/lib/syslinux/modules/bios/ldlinux.c32
    dest: "{{ workdir }}/isolinux/ldlinux.c32"
    remote_src: yes
  delegate_to: localhost

- name: copy isolinux to target
  copy:
    src: files/isolinux.cfg
    dest: "{{ workdir }}/isolinux/isolinux.cfg"
  delegate_to: localhost

- name: Build hybrid ISO (UEFI + BIOS)
  command: >
    xorriso -as mkisofs
    -r -V DEBIANAUTO
    -J -joliet-long -l
    -iso-level 3
    -o {{ iso_custom }}
    -b isolinux/isolinux.bin
    -c isolinux/boot.cat
    -no-emul-boot
    -boot-load-size 4
    -boot-info-table
    -eltorito-alt-boot
    -e EFI/boot/bootx64.efi
    -no-emul-boot
    {{ workdir }}
  delegate_to: localhost

- name: ISO build complete
  debug:
    msg: "ISO written to {{ iso_custom }}"
  delegate_to: localhost
