---
    - name: Cleanup previous files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ workdir }}"
        - "{{ iso_custom }}"
      delegate_to: localhost

    - name: Create working directory
      file:
        path: "{{ workdir }}"
        state: directory
      delegate_to: localhost

    - name: Extract original ISO
      command: "7z x {{ iso_orig }} -o{{ workdir }}"
      args:
        creates: "{{ workdir }}/[BOOT]"
      delegate_to: localhost

    - name: Create nocloud directory
      file:
        path: "{{ workdir }}/nocloud"
        state: directory
      delegate_to: localhost

    - name: Copy user-data for vm
      template:
        src: user-data_vm
        dest: "{{ workdir }}/nocloud/user-data"
      delegate_to: localhost
      when: type == "vm"

    - name: Copy user-data for baremetal
      template:
        src: user-data
        dest: "{{ workdir }}/nocloud/user-data_baremetal"
      delegate_to: localhost
      when: type == "baremetal"

    - name: Copy meta-data
      template:
        src: meta-data
        dest: "{{ workdir }}/nocloud/meta-data"
      delegate_to: localhost

    - name: Copy grub.cfg template
      template:
        src: grub.cfg
        dest: "{{ workdir }}/boot/grub/grub.cfg"
      delegate_to: localhost

    - name: Add autoinstall GRUB entry
      blockinfile:
        path: "{{ workdir }}/boot/grub/grub.cfg"
        marker: "# {mark} AUTOINSTALL ENTRY"
        block: |
          menuentry "Ubuntu Server 24.04 Autoinstall {{ inventory_hostname }}" {
              set gfxpayload=keep
              linux   /casper/vmlinuz autoinstall ds=nocloud;s=/cdrom/nocloud/ ---
              initrd  /casper/initrd
          }
      delegate_to: localhost

    - name: Create isolinux directory
      file:
        path: "{{ workdir }}/isolinux"
        state: directory
      delegate_to: localhost

    - name: Copy isolinux.bin
      copy:
        src: /usr/lib/ISOLINUX/isolinux.bin
        dest: "{{ workdir }}/isolinux/isolinux.bin"
        remote_src: yes
      delegate_to: localhost

    - name: Copy ldlinux.c32
      copy:
        src: /usr/lib/syslinux/modules/bios/ldlinux.c32
        dest: "{{ workdir }}/isolinux/ldlinux.c32"
        remote_src: yes
      delegate_to: localhost

    - name: Copy isolinux templates
      copy:
        src: templates/isolinux.cfg
        dest: "{{ workdir }}/isolinux/isolinux.cfg"
      delegate_to: localhost

    - name: Copy txt.cfg
      copy:
        src: templates/txt.cfg
        dest: "{{ workdir }}/isolinux/txt.cfg"
      delegate_to: localhost

    - name: Build hybrid ISO (UEFI + BIOS)
      command: >
        xorriso -as mkisofs
        -r -V UBUNTUAUTO
        -J -joliet-long -l
        -iso-level 3
        -o {{ iso_custom }}
        -b isolinux/isolinux.bin
        -c isolinux/boot.cat
        -no-emul-boot
        -boot-load-size 4
        -boot-info-table
        -eltorito-alt-boot
        -e EFI/boot/bootx64.efi
        -no-emul-boot
        {{ workdir }}
      delegate_to: localhost

    - name: ISO build complete
      debug:
        msg: "ISO written to {{ iso_custom }}"
      delegate_to: localhost